# app.py тАФ AI-Based Visa Recommendation System (Purity & Destiny Theme)
# Developed by Team (6 Members)
# Bilingual Version тАФ English + Tamil

import streamlit as st
import pandas as pd
import numpy as np
import joblib

# --------------------------
# Load trained model & encoder
# --------------------------
model = joblib.load("best_visa_model.pkl")     # Replace with your model file
label_encoder = joblib.load("label_encoder.pkl")

# --------------------------
# Page Configuration
# --------------------------
st.set_page_config(
    page_title="VIRA тАв Visa Recommendation System",
    page_icon="ЁЯМР",
    layout="centered"
)

# --------------------------
# Custom Styling
# --------------------------
st.markdown("""
    <style>
        body {
            background-color: #f8fafc;
        }
        .title {
            font-size: 38px;
            font-weight: 700;
            color: #1e293b;
            text-align: center;
            margin-bottom: 10px;
        }
        .subtitle {
            font-size: 18px;
            color: #475569;
            text-align: center;
            margin-bottom: 30px;
        }
        .visa {
            background: linear-gradient(135deg, #22d3ee, #3b82f6);
            color: white;
            padding: 10px 15px;
            border-radius: 10px;
            text-align: center;
            font-size: 20px;
            margin-top: 10px;
        }
    </style>
""", unsafe_allow_html=True)

st.markdown('<div class="title">ЁЯМР VIRA тАФ AI-Based Visa Recommendation System</div>', unsafe_allow_html=True)
st.markdown('<div class="subtitle">Empowering Smart Visa Choices for Global Applicants | роЙро▓роХро│ро╛ро╡ро┐роп ро╡ро┐рогрпНрогрокрпНрокродро╛ро░ро░рпНроХро│рпБроХрпНроХро╛рой рокрпБродрпНродро┐роЪро╛ро▓ро┐ ро╡ро┐роЪро╛ рокро░ро┐роирпНродрпБро░рпИроХро│рпН</div>', unsafe_allow_html=True)

# --------------------------
# Input Section
# --------------------------
st.sidebar.header("ЁЯз╛ Applicant Details / ро╡ро┐рогрпНрогрокрпНрокродро╛ро░ро░рпН ро╡ро┐ро╡ро░роЩрпНроХро│рпН")

age = st.sidebar.slider("Applicant Age / ро╡ро┐рогрпНрогрокрпНрокродро╛ро░ро░ро┐ройрпН ро╡ропродрпБ", 18, 70, 25)
education = st.sidebar.selectbox("Education Level / роХро▓рпНро╡ро┐ роиро┐ро▓рпИ", ["High School", "Diploma", "Bachelor's", "Master's", "PhD"])
occupation = st.sidebar.selectbox("Occupation / родрпКро┤ро┐ро▓рпН", ["Student", "Engineer", "Doctor", "Entrepreneur", "Artist", "Researcher", "Other"])
financial_status = st.sidebar.selectbox("Financial Stability / роиро┐родро┐ роиро┐ро▓рпИ", ["Low", "Medium", "High"])
dependents = st.sidebar.number_input("Number of Dependents / роЪро╛ро░рпНроирпНродро┐ро░рпБрокрпНрокрпЛро░рпН роОрогрпНрогро┐роХрпНроХрпИ", 0, 10, 0)
sponsorship = st.sidebar.selectbox("Do you have a Sponsor? / роЙроЩрпНроХро│рпБроХрпНроХрпБ роиро┐родро┐ роЖродро░ро╡рпБ роЙро│рпНро│родро╛?", ["Yes", "No"])
previous_visas = st.sidebar.selectbox("Have you had previous UK visas? / роорпБройрпНрокрпБ ропрпБроХрпЗ ро╡ро┐роЪро╛ рокрпЖро▒рпНро▒рпБро│рпНро│рпАро░рпНроХро│ро╛?", ["Yes", "No"])

st.markdown("### тЬИя╕П Applicant Information Form / ро╡ро┐рогрпНрогрокрпНрокродро╛ро░ро░рпН родроХро╡ро▓рпН рокроЯро┐ро╡роорпН")
st.write("Please fill the details carefully to get the most suitable visa recommendation. / рооро┐роХроЪрпН роЪро┐ро▒роирпНрод ро╡ро┐роЪро╛ рокро░ро┐роирпНродрпБро░рпИропрпИ рокрпЖро▒ ро╡ро┐ро╡ро░роЩрпНроХро│рпИ роХро╡ройрооро╛роХ роиро┐ро░рокрпНрокро╡рпБроорпН.")

# --------------------------
# Encode Inputs
# --------------------------
def encode_inputs():
    return pd.DataFrame([{
        "Applicant Age": age,
        "Education Level": {"High School": 1, "Diploma": 2, "Bachelor's": 3, "Master's": 4, "PhD": 5}[education],
        "Occupation": {"Student": 1, "Engineer": 2, "Doctor": 3, "Entrepreneur": 4, "Artist": 5, "Researcher": 6, "Other": 7}[occupation],
        "Financial Status": {"Low": 1, "Medium": 2, "High": 3}[financial_status],
        "Dependents": dependents,
        "Sponsorship Status": 1 if sponsorship == "Yes" else 0,
        "Previous UK Visas": 1 if previous_visas == "Yes" else 0
    }])

# --------------------------
# Visa Step Guides (English + Tamil)
# --------------------------
visa_steps = {
    "Work & Employment Visa": [
        "тЬЕ Check eligibility and confirm your job offer is valid.",
        "ЁЯУД Prepare documents: passport, employment letter, certificates, police clearance.",
        "ЁЯТ╗ Apply online and complete medical checks.",
        "ЁЯТ░ Pay visa fees and attend biometrics appointment."
    ],
    "Student & Academic Visa": [
        "ЁЯОУ Obtain admission confirmation (CAS/I-20).",
        "ЁЯУС Prepare financial documents and transcripts.",
        "ЁЯТ╗ Apply online and attend interview if required."
    ],
    "Family & Dependent Visa": [
        "ЁЯСитАНЁЯСйтАНЁЯСз Confirm relationship and sponsor eligibility.",
        "ЁЯУД Submit certificates, sponsorship proof, and relationship evidence."
    ],
    "Visitor & Tourism Visa": [
        "ЁЯМН Decide travel purpose and prepare itinerary.",
        "ЁЯТ╗ Apply via official portal and pay fees."
    ],
    "Permanent Residency & Settlement Visa": [
        "ЁЯПб Check eligibility for PR/settlement route.",
        "ЁЯУЛ Submit work experience, language proof, and funds documents."
    ],
    "Special Category Visa": [
        "ЁЯОн Submit proof of special eligibility (artist, diplomat, sports, etc.)."
    ]
}

tamil_steps = {
    "Work & Employment Visa": [
        "тЬЕ родроХрпБродро┐ рооро▒рпНро▒рпБроорпН ро╡рпЗро▓рпИ ро╡ро╛ропрпНрокрпНрокрпИ роЙро▒рпБродро┐роЪрпЖропрпНропро╡рпБроорпН.",
        "ЁЯУД рокро╛ро╕рпНрокрпЛро░рпНроЯрпН, ро╡рпЗро▓рпИ роХроЯро┐родроорпН, роЪро╛ройрпНро▒ро┐родро┤рпНроХро│рпН, рокрпЛро▓рпАро╕рпН роЪро░рпНроЯро┐рокро┐роХрпЗроЯрпН родропро╛ро░ро┐роХрпНроХро╡рпБроорпН.",
        "ЁЯТ╗ роЗрогрпИропродро│роорпН ро╡ро┤ро┐ропро╛роХ ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХро╡рпБроорпН рооро▒рпНро▒рпБроорпН рооро░рпБродрпНродрпБро╡ рокро░ро┐роЪрпЛродройрпИ роЪрпЖропрпНропро╡рпБроорпН.",
        "ЁЯТ░ роХроЯрпНроЯрогродрпНродрпИ роЪрпЖро▓рпБродрпНродро┐ рокропрпЛроорпЖроЯрпНро░ро┐роХрпН рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН."
    ],
    "Student & Academic Visa": [
        "ЁЯОУ роХро▓рпНро╡ро┐ роиро┐ро▒рпБро╡ройродрпНродро┐ро▓рпН роЪрпЗро░рпНроХрпНроХрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН.",
        "ЁЯУС роиро┐родро┐ роЖро╡рогроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роородро┐рокрпНрокрпЖрогрпН рокроЯрпНроЯро┐ропро▓рпНроХро│рпН родропро╛ро░ро┐роХрпНроХро╡рпБроорпН.",
        "ЁЯТ╗ рооро╛рогро╡ро░рпН ро╡ро┐роЪро╛ роЗрогрпИропродро│родрпНродро┐ройрпН роорпВро▓роорпН ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХро╡рпБроорпН."
    ],
    "Family & Dependent Visa": [
        "ЁЯСитАНЁЯСйтАНЁЯСз роЙро▒ро╡рпБ рооро▒рпНро▒рпБроорпН ро╕рпНрокро╛ройрпНроЪро░рпН родроХрпБродро┐ропрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН.",
        "ЁЯУД роЪро╛ройрпНро▒ро┐родро┤рпНроХро│рпН рооро▒рпНро▒рпБроорпН роЖродро╛ро░ роЖро╡рогроЩрпНроХро│рпИ роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН."
    ],
    "Visitor & Tourism Visa": [
        "ЁЯМН рокропрог роирпЛроХрпНроХродрпНродрпИ родрпАро░рпНрооро╛ройро┐роХрпНроХро╡рпБроорпН рооро▒рпНро▒рпБроорпН рокропрог родро┐роЯрпНроЯроорпН родропро╛ро░ро┐роХрпНроХро╡рпБроорпН.",
        "ЁЯТ╗ роЕродро┐роХро╛ро░рокрпНрокрпВро░рпНро╡ родро│родрпНродро┐ройрпН роорпВро▓роорпН ро╡ро┐рогрпНрогрокрпНрокро┐родрпНродрпБ роХроЯрпНроЯрогроорпН роЪрпЖро▓рпБродрпНродро╡рпБроорпН."
    ],
    "Permanent Residency & Settlement Visa": [
        "ЁЯПб роиро┐ро░роирпНродро░ роХрпБроЯро┐ропрпЗро▒рпНро▒ родроХрпБродро┐ропрпИ роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН.",
        "ЁЯУЛ ро╡рпЗро▓рпИ роЕройрпБрокро╡роорпН рооро▒рпНро▒рпБроорпН роиро┐родро┐ роЖродро╛ро░роЩрпНроХро│рпИ роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН."
    ],
    "Special Category Visa": [
        "ЁЯОн роЪро┐ро▒рокрпНрокрпБ родроХрпБродро┐ роЪро╛ройрпНро▒рпБроХро│рпН (роХро▓рпИроЮро░рпН, родрпВродрпБро╡ро░рпН, ро╡ро┐ро│рпИропро╛роЯрпНроЯрпБ ро╡рпАро░ро░рпН рокрпЛройрпНро▒ро╡рпИ) роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН."
    ]
}

# --------------------------
# Prediction Button
# --------------------------
if st.button("ЁЯФН Recommend My Visa / роОройродрпБ ро╡ро┐роЪро╛ро╡рпИ рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН"):
    input_data = encode_inputs()
    prediction = model.predict(input_data)
    visa_type = label_encoder.inverse_transform(prediction)[0]

    st.markdown(f"<div class='visa'>ЁЯОп Recommended Visa Type / рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯ ро╡ро┐роЪро╛ ро╡роХрпИ: <b>{visa_type}</b></div>", unsafe_allow_html=True)

    st.subheader("ЁЯУШ Step-by-Step Procedure (English):")
    for step in visa_steps.get(visa_type, []):
        st.write(step)

    if visa_type in tamil_steps:
        st.subheader("ЁЯУЩ ро╡ро┐роЪро╛ ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХрпБроорпН рокроЯро┐роХро│рпН (родрооро┐ро┤рпН):")
        for step in tamil_steps[visa_type]:
            st.write(step)

# --------------------------
# Footer
# --------------------------
st.markdown("---")
st.markdown("тЬи *Developed by Team Purity & Destiny (AI Project тАУ Visa Recommendation System)* | ЁЯТб *рокрпБро░ро┐роЯрпНроЯро┐ & роЯрпЖро╕рпНроЯро┐ройро┐ роХрпБро┤рпБро╡ро╛ро▓рпН роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ*")
